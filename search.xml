<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《Jenkins 2权威指南》</title>
      <link href="/2023/05/19/Jenkins%202%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/"/>
      <url>/2023/05/19/Jenkins%202%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/DCC8A35F0B25E6C033260746B89DAF45.png" alt="《Jenkins 2权威指南》"></p><h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><hr><p>设计、实现并且执行具有一定灵活性、可控性以及易于维护性的持续交付流水线，对于以前版本的Jenkins来说是不可能实现的。通过这本实用的书籍，构建管理人员、开发人员、测试人员以及其他专业人员将会学到如何利用Jenkins 2的新特性来定义流水线即代码、集成其他关键技术，以及创建自动化的、可靠的流水线，以便简化和加速DevOps环境的建设。</p><p>作者Brent Laster向你展示了Jenkins 2与这个流行的开源自动化平台基于Web的传统版本有着很大的不同。如果你熟悉Jenkins并且想利用这些新技术来改造老旧流水线或者构建现代的自动化持续交付环境，那么这本书适合你。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><hr><p>郝树伟</p><p>《Jenkins权威指南》第一译者，阿里云高级研发工程师，主要负责开源集成和DevOps相关产品的研发，在CI&#x2F;CD领域有丰富经验，在Jenkins开源社区与相关书籍翻译、汉化方面有较多贡献和经验。</p><p>石雪峰</p><p>Jenkins全球推广大使、Certified Jenkins Engineer、Jenkins中文社区核心成员、Jenkins的狂热爱好者。目前就职于京东商城前台工程效率团队，负责公司级持续交付和DevOps平台体系建设。</p><p>雷涛</p><p>Jenkins全球推广大使、Certified Jenkins Engineer、DevOps标准核心编写专家。目前就职于百度工程效率部，曾先后就职于新浪网、摩托罗拉、诺基亚、爱立信、乐视致新等国内外知名企业，专注于互联网、电信、金融、无人驾驶汽车等行业的软件工程效率提升，DevOps解决方案，持续交付，ASPICE&#x2F;ISO 26262研发过程落地等领域。</p><p>李华强</p><p>乐融致新高级配置经理，软件配置管理（SCM）领域的一名老兵，先后就职于北电网络、爱立信、飞维美地、乐视、乐融等多家企业，从事与SCM、DevOps相关的工作。Jenkins的忠实粉丝、最佳实践的推广者，Jenkins官方Certified Jenkins Engineer（CJE）和Certified CloudBees Jenkins Platform Engineer（CCJE）认证者。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><hr><p>第1章 Jenkins 2简介 1<br>Jenkins 2是什么 2<br>Jenkinsfile 3<br>声明式流水线 5<br>Blue Ocean界面 6<br>Jenkins 2的全新任务类型 7<br>做出转变的原因 10<br>DevOps理念的转变 10<br>装配流水线 11<br>可恢复性 11<br>可配置性 11<br>共享工作空间 11<br>专业知识 12<br>访问逻辑 12<br>流水线源管理 12<br>竞争 12<br>迎接挑战 13<br>兼容性 13<br>流水线兼容性 13<br>插件兼容性 15<br>检查兼容性 20<br>总结 21<br>第2章 基础知识 23<br>语法：脚本式流水线和声明式流水线 24<br>如何选择脚本式语法和声明式语法 25<br>系统（system）：主节点（master）、节点（node）、代理节点（agent）和执行器（executor）26<br>主节点 27<br>节点 27<br>代理节点 27<br>执行器 28<br>创建节点 29<br>结构：使用Jenkins DSL 31<br>节点 32<br>阶段 34<br>步骤 34<br>支持环境：开发一个流水线脚本 36<br>创建一个流水线项目 36<br>编辑器 38<br>使用代码片段生成器 39<br>运行一条流水线 43<br>回放 49<br>总结 52<br>第3章 流水线执行流程 53<br>触发任务 53<br>在其他项目构建后构建 54<br>周期性构建 54<br>使用GitHub钩子触发器进行GitSCM轮询 57<br>SCM轮询 57<br>静默期 58<br>远程触发构建 58<br>用户输入 58<br>输入 59<br>参数 62<br>多个输入参数的返回值 68<br>参数与声明式流水线 69<br>流程控制选项 74<br>超时（timeout） 74<br>重试（retry） 76<br>睡眠（sleep） 76<br>等待直到（waitUntil） 76<br>处理并发 78<br>使用lock步骤对资源加锁 78<br>使用milestone来控制并发构建 80<br>在多分支流水线中限制并发 82<br>并行地运行任务 82<br>有条件的执行功能 92<br>构建后处理 94<br>脚本式流水线构建后处理 94<br>声明式流水线与构建后处理 96<br>总结 97<br>第4章 通知与报告 99<br>通知 99<br>电子邮件 100<br>协作服务 110<br>报告 120<br>发布HTML报告 120<br>总结 123<br>第5章 访问与安全 125<br>安全加固Jenkins 125<br>启用安全性 126<br>其他全局安全配置 129<br>Jenkins中的凭证 133<br>凭证范围 134<br>凭证域 135<br>凭证提供者 135<br>凭证存储 136<br>管理凭证 136<br>选择凭证提供者 136<br>选择凭证类型 137<br>通过提供者指定凭证类型 138<br>创建和管理凭证 139<br>上下文链接 141<br>添加一个新域或者凭证 141<br>使用新域和凭证 144<br>高级凭证：基于角色的访问权限 145<br>基本用途 146<br>管理角色 147<br>分配角色 152<br>角色策略宏 155<br>在流水线中使用凭证 157<br>用户名和密码 157<br>SSH密钥 158<br>令牌凭证 159<br>控制脚本安全性 160<br>脚本检查 160<br>脚本批准 161<br>Groovy沙箱 162<br>Jenkins凭证与Vault配合使用 164<br>方法 164<br>安装 165<br>创建一个策略 165<br>身份验证 166<br>在Jenkins中使用Vault 168<br>总结 171<br>第6章 扩展你的流水线 173<br>可信库和不可信库 173<br>内部库与外部库 174<br>内部库 174<br>外部库 176<br>从代码仓库获取库 178<br>Modern SCM 178<br>Legacy SCM 178<br>在流水线脚本中使用库 179<br>从源码版本控制中自动下载库 180<br>加载库到脚本中 180<br>Jenkins项目中的库范围 182<br>库结构 183<br>样本库例程 183<br>共享库代码的结构 184<br>使用第三方库 195<br>直接加载代码 196<br>从外部SCM加载代码 196<br>回放外部代码和库 198<br>深入研究可信与不可信代码 200<br>总结 203<br>第7章 声明式流水线 205<br>动机 206<br>不直观 206<br>掌握Groovy 206<br>其他必需的装配 206<br>结构 207<br>代码块 208<br>部分 208<br>指令 209<br>步骤 209<br>条件 210<br>构建代码块 210<br>Pipeline 211<br>Agent 212<br>Environment 215<br>Tools 216<br>Options 219<br>Triggers 222<br>Parameters 224<br>Libraries 227<br>Stages 228<br>Post 231<br>处理非声明式的代码 232<br>检查你的插件 233<br>创建一个共享库 233<br>在pipeline代码块之外放置代码 233<br>script语句 234<br>在一个阶段中使用 parallel234<br>脚本检查与错误报告 235<br>声明式流水线与Blue Ocean接口 238<br>总结 238<br>第8章 理解项目类型 241<br>通用项目选项 241<br>基础设置 241<br>源码管理 247<br>构建触发器 249<br>构建环境 256<br>构建 266<br>构建后操作 266<br>项目类型 266<br>自由风格类型项目 267<br>Maven项目类型 267<br>流水线项目类型 270<br>外部任务项目类型 272<br>多配置项目类型 275<br>Ivy项目 280<br>文件夹 282<br>多分支流水线项目 287<br>GitHub组织项目 292<br>Bitbucket团队&#x2F;项目 296<br>总结 299<br>第9章 Blue Ocean用户界面 301<br>第一部分：管理已有的流水线 302<br>主界面 302<br>项目详情页面 305<br>运行页面 316<br>第二部分：使用Blue Ocean编辑器 325<br>不依赖现有Jenkinsfile创建一个全新的流水线 326<br>使用编辑器 330<br>编辑已有的流水线 340<br>导入和编辑已有的流水线 344<br>使用非GitHub仓库支持流水线 354<br>总结 356<br>第10章 转换 357<br>通用的准备 358<br>逻辑和准确性 358<br>项目类型 358<br>系统 358<br>访问 358<br>全局配置 359<br>插件 359<br>共享库 359<br>将自由风格类型的流水线转换为脚本式流水线 360<br>源码 364<br>编译 369<br>单元测试 373<br>集成测试 377<br>迁移流水线接下来的部分 380<br>从Jenkins流水线项目转换为Jenkinsfile 385<br>方法 388<br>最后的步骤 395<br>从脚本式流水线转换为声明式流水线 397<br>样本流水线 397<br>转换 399<br>完成转换 402<br>可用于转换的通用指南 403<br>总结 405<br>第11章 操作系统环境集成（shell、工作空间、环境和文件） 407<br>使用shell的步骤 407<br>sh步骤 408<br>bat步骤 413<br>powershell步骤 414<br>使用环境变量 415<br>withEnv步骤 416<br>使用工作空间 418<br>创建自定义工作空间 418<br>清理工作空间 420<br>文件和目录步骤 422<br>使用文件 422<br>使用目录 423<br>使用文件和目录的更多操作 424<br>总结 425<br>第12章 集成分析工具 427<br>SonarQube调查 427<br>使用个人规则 428<br>质量门和配置文件 432<br>扫描程序 434<br>将SonarQube与Jenkins一起使用 434<br>全局配置 434<br>在自由风格类型项目中使用SonarQube 436<br>在流水线项目中使用SonarQube 436<br>利用SonarQube分析的结果 437<br>在Jenkins中集成SonarQube的输出 441<br>代码覆盖率：与JaCoCo集成 442<br>关于JaCoCo 442<br>JaCoCo与流水线集成 443<br>在Jenkins中集成JaCoCo的输出 445<br>总结 446<br>第13章 集成制品管理 447<br>发布和获取制品 447<br>安装和全局配置 448<br>在脚本式流水线中使用Artifactory 449<br>执行其他任务 454<br>下载指定文件到指定目录 454<br>上传指定文件到指定路径 454<br>设置构建保留策略 455<br>构建提升 455<br>声明式流水线集成 455<br>Artifactory与Jenkins输出集成 456<br>制品归档和指纹 457<br>总结 462<br>第14章 集成容器 465<br>配置成一个云 465<br>全局配置 466<br>使用Docker镜像作为代理节点 469<br>在流水线中使用云镜像 473<br>在声明式流水线中动态创建的代理节点 477<br>Docker流水线全局变量 480<br>全局变量 480<br>Docker应用全局变量方法 481<br>Docker镜像全局变量方法 487<br>Docker容器全局变量方法 491<br>通过shell运行Docker 492<br>总结 493<br>第15章 其他接口 495<br>使用命令行接口 496<br>直接使用SSH接口 496<br>使用CLI客户端 499<br>使用Jenkins REST API 501<br>过滤结果 502<br>启动构建 504<br>使用脚本控制台 506<br>总结 508<br>第16章 故障处理 509<br>深入流水线步骤 509<br>处理序列化错误 512<br>连续传递风格 513<br>序列化流水线 513<br>NotSerializableException 513<br>处理非序列化错误 514<br>识别引发错误的脚本行 517<br>处理流水线异常 518<br>在声明式流水线中使用非声明式代码 518<br>未授权代码（脚本和方法授权） 522<br>不支持的操作 523<br>系统日志 523<br>时间戳 525<br>流水线耐用性设置 526<br>总结 527<br>关于作者 529<br>封面介绍 529<br>关于译者 530</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><hr><p>链接: <a href="https://pan.baidu.com/s/1jp_Zx5pQibJGI9ggraSPNg?pwd=n9r2">https://pan.baidu.com/s/1jp_Zx5pQibJGI9ggraSPNg?pwd=n9r2</a><br>提取码: n9r2<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 书籍推荐 </category>
          
          <category> 百度网盘PDF下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF下载 </tag>
            
            <tag> Jenkins </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Kong网关：入门、实战与进阶》</title>
      <link href="/2023/05/19/Kong%E7%BD%91%E5%85%B3%EF%BC%9A%E5%85%A5%E9%97%A8%E3%80%81%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB%20copy/"/>
      <url>/2023/05/19/Kong%E7%BD%91%E5%85%B3%EF%BC%9A%E5%85%A5%E9%97%A8%E3%80%81%E5%AE%9E%E6%88%98%E4%B8%8E%E8%BF%9B%E9%98%B6-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB%20copy/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/9873662DB6DD82154A4484E46FD188A3.png" alt="《Kong网关：入门、实战与进阶》"></p><h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><p>这是一本关于Kong网关开发和运维的集大成之作。作者基于自己在该领域的丰富实践经验，从零开始，不仅循序渐进地讲解了Kong网关的核心概念、使用方法、工作原理、工程实践和源码，而且还将微服务设计、分布式架构、DevOps等相关技术融入其中，帮助读者打通Kong网关的整个技术体系，轻松跨越从理论到项目实战的鸿沟。</p><p>全书共16章，分为4篇，具体内容如下。</p><p>入门篇（第1~4章）</p><p>首先对网关层和Kong网关做了整体性介绍，然后有针对性地讲解了Nginx、OpenResty和Lua语言等必备知识，为之后深入学习打下基础。</p><p>基础篇（第5~8章）</p><p>这部分围绕Kong网关的日常配置和操作展开，具体包括Kong网关配置文件、部署方案、命令行向导、代理、鉴权、负载均衡策略和健康检查机制等内容。</p><p>进阶篇（第9~12章）</p><p>主要介绍了Kong网关区别于其他传统网关的插件机制，以及Kong网关在整个架构体系中与其他系统之间的交互和联动。</p><p>应用篇（第13~16章）</p><p>主要结合当前日益成熟的云原生环境，给出Kong网关在不同场景下的整体解决方案，如与微服务、Service Mesh、Kubernetes、Serverless的结合等。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><hr><p>孔庆雍</p><p>毕业于同济大学，曾就职于华为、中国移动、数禾科技等多家公司，任职期间参与了多个大型系统设计、研发工作。现任上海珞瑾数据信息有限公司CTO、首席架构师，在现公司主导了内部自研DevOps平台的搭建及底层架构设计与规划。敏捷开发思想践行者，擅长利用技术推进项目管理与产品交付。</p><p>在企业级SaaS服务、大规模分布式架构、微服务治理、网关层设计研发等领域积累了丰富的经验，在现公司主导研发的酒店管理系统已累计覆盖10万家门店，日均请求量超1亿。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><hr><p>前言<br>入门篇<br>第1章 全面了解Kong网关 2<br>1.1 网关简介 2<br>1.1.1 网关的由来 3<br>1.1.2 网关的作用 3<br>1.2 Kong网关简介 6<br>1.2.1 Kong网关的发展历程 6<br>1.2.2 Kong网关与传统网关对比 6<br>1.2.3 其他主流网关 7<br>1.3 Kong网关基础组件 12<br>1.3.1 Kong服务器 12<br>1.3.2 数据库 13<br>1.3.3 Kong管理GUI 14<br>1.4 Kong网关安装指南 14<br>1.4.1 在Mac环境中安装Kong网关 15<br>1.4.2 在Linux环境中安装Kong网关 15<br>1.4.3 在Docker环境中安装Kong网关 15<br>1.5 使用Kong网关搭建Web应用 16<br>1.5.1 示例项目介绍 16<br>1.5.2 后端服务路由 18<br>1.5.3 静态页面代理 20<br>1.6 本章小结 24<br>第2章 Nginx必备知识 25<br>2.1 Nginx安装 25<br>2.1.1 在Mac环境中安装Nginx 25<br>2.1.2 在Linux环境中安装Nginx 26<br>2.1.3 在Docker环境中安装Nginx 26<br>2.2 Nginx详解 26<br>2.2.1 Nginx文件的目录结构 26<br>2.2.2 命令行参数 28<br>2.2.3 配置文件 29<br>2.2.4 依赖库 32<br>2.2.5 Nginx的工作原理 33<br>2.2.6 Nginx优化指南 35<br>2.3 项目实践 37<br>2.3.1 从Kong切换到Nginx 37<br>2.3.2 添加黑白名单 39<br>2.3.3 添加限流 39<br>2.3.4 从Nginx切换到Kong 41<br>2.3.5 小结 41<br>2.4 本章小结 42<br>第3章 Lua必备知识 43<br>3.1 Lua入门与规范 43<br>3.1.1 基础知识 43<br>3.1.2 安装指南 44<br>3.1.3 解释器 45<br>3.1.4 语法规范 46<br>3.2 数据类型 47<br>3.3 操作符 52<br>3.4 表达式语句 54<br>3.4.1 赋值语句 54<br>3.4.2 控制语句 55<br>3.5 Lua库 58<br>3.6 本章小结 62<br>第4章 OpenResty必备知识 63<br>4.1 OpenResty入门安装 63<br>4.1.1 在Mac环境中安装OpenResty 63<br>4.1.2 在Linux环境中安装OpenResty 64<br>4.1.3 在Docker环境中安装OpenResty 64<br>4.2 OpenResty详解 64<br>4.2.1 OpenResty服务器的目录结构 64<br>4.2.2 Resty CLI 65<br>4.2.3 OpenResty包管理工具 67<br>4.3 OpenResty工作原理 69<br>4.4 OpenResty性能优化 71<br>4.4.1 避免使用阻塞函数 72<br>4.4.2 巧用table组件 72<br>4.4.3 使用缓存 73<br>4.4.4 火焰图 73<br>4.5 项目实践 75<br>4.6 本章小结 82<br>基础篇<br>第5章 Kong网关配置与部署 84<br>5.1 Kong启动项配置 84<br>5.1.1 配置项加载流程 85<br>5.1.2 配置项详解 86<br>5.1.3 环境变量 89<br>5.1.4 配置文件示例 89<br>5.2 注入Nginx指令 90<br>5.2.1 注入单个Nginx指令 91<br>5.2.2 通过文件方式注入Nginx指令 92<br>5.3 个性化使用场景 92<br>5.3.1 自定义Nginx模板文件 93<br>5.3.2 在OpenResty实例中嵌入Kong 93<br>5.4 Kong网关部署 94<br>5.4.1 无数据库部署模式 94<br>5.4.2 数据库部署模式 97<br>5.4.3 混合部署模式 100<br>5.5 本章小结 102<br>第6章 Kong网关命令行 103<br>6.1 通用标志参数 104<br>6.2 Kong网关命令行详解 104<br>6.2.1 kong check 104<br>6.2.2 kong config 106<br>6.2.3 kong health 109<br>6.2.4 kong hybrid 109<br>6.2.5 kong migrations 110<br>6.2.6 kong prepare 112<br>6.2.7 kong quit 113<br>6.2.8 kong reload 113<br>6.2.9 kong restart 114<br>6.2.10 kong start 114<br>6.2.11 kong stop 115<br>6.2.12 kong version 116<br>6.3 本章小结 116<br>第7章 Kong网关代理及鉴权 117<br>7.1 Kong网关代理基础知识 117<br>7.1.1 Kong网关术语简介 117<br>7.1.2 Kong网关代理环境配置 118<br>7.2 Kong网关代理示例 118<br>7.3 路由匹配规则 121<br>7.3.1 通用匹配规则 121<br>7.3.2 paths属性 123<br>7.3.3 hosts属性 126<br>7.3.4 methods属性 128<br>7.3.5 headers属性（hosts除外） 129<br>7.3.6 sources &amp; destinations属性 129<br>7.3.7 snis属性 129<br>7.4 路由匹配优先级 130<br>7.4.1 优先级策略 130<br>7.4.2 后备路由策略 131<br>7.5 Kong网关代理行为 132<br>7.5.1 超时机制 132<br>7.5.2 错误重试机制 133<br>7.5.3 插件执行策略 133<br>7.5.4 响应内容 133<br>7.6 配置SSL协议 134<br>7.7 代理WebSocket流量 135<br>7.8 代理gRPC流量 138<br>7.9 Kong网关鉴权 140<br>7.9.1 通用鉴权流程 140<br>7.9.2 匿名接入流程 142<br>7.9.3 多重认证策略 143<br>7.10 本章小结 144<br>第8章 Kong网关负载均衡策略与健康检查 145<br>8.1 负载均衡 145<br>8.1.1 负载均衡简介 145<br>8.1.2 负载均衡解决方案 146<br>8.1.3 Kong网关中的负载均衡 146<br>8.2 基于DNS的负载均衡 146<br>8.2.1 A记录（包含AAAA记录） 147<br>8.2.2 SRV记录 147<br>8.2.3 DNS 记录优先级 147<br>8.2.4 其他注意事项 148<br>8.3 环状负载均衡器 148<br>8.3.1 基础概念 148<br>8.3.2 负载均衡策略 150<br>8.3.3 其他注意事项 151<br>8.4 负载均衡特性使用场景 151<br>8.4.1 蓝绿发布 151<br>8.4.2 金丝雀发布 155<br>8.5 健康检查 157<br>8.5.1 健康检查标准 157<br>8.5.2 健康检查类型 159<br>8.5.3 健康检查配置 160<br>8.6 本章小结 162<br>进阶篇<br>第9章 Kong网关插件 164<br>9.1 Kong网关插件简介 164<br>9.1.1 Kong网关插件概念 164<br>9.1.2 Kong网关插件原理 165<br>9.2 Kong官方插件 166<br>9.2.1 鉴权类插件 166<br>9.2.2 安全类插件 177<br>9.2.3 流量类插件 179<br>9.2.4 分析监控类插件 195<br>9.2.5 内容转换类插件 197<br>9.2.6 日志类插件 204<br>9.2.7 其他插件 210<br>9.3 自定义Kong网关插件 210<br>9.3.1 自定义插件开发流程和插件生命周期管理详解 210<br>9.3.2 插件开发套件 240<br>9.3.3 Go插件开发向导 241<br>9.3.4 自定义插件实例 243<br>9.4 本章小结 245<br>第10章 Kong网关日志 246<br>10.1 Kong网关日志简介 246<br>10.1.1 Kong网关日志分类 246<br>10.1.2 Kong网关日志级别 248<br>10.2 Kong网关结合日志平台 249<br>10.2.1 ELK方案简介 249<br>10.2.2 Kong网关结合ELK 253<br>10.2.3 日志系统使用场景 256<br>10.3 自定义日志 261<br>10.3.1 Kong网关定制日志 262<br>10.3.2 ELK定制日志 264<br>10.3.3 小结 265<br>10.4 本章小结 266<br>第11章 Kong网关运维 267<br>11.1 资源选型 267<br>11.1.1 服务器资源 267<br>11.1.2 数据库资源 268<br>11.1.3 弹性伸缩 269<br>11.1.4 性能参数 269<br>11.2 Kong网关监控 270<br>11.2.1 监控平台选型 270<br>11.2.2 搭建监控平台 271<br>11.2.3 Kong网关监控平台配置 272<br>11.2.4 Kong网关监控平台指标详解 278<br>11.2.5 Kong监控平台指标测试 279<br>11.2.6 Kong监控平台的预警功能 281<br>11.3 Kong网关运维 284<br>11.3.1 数据备份 284<br>11.3.2 软&#x2F;硬件维护 286<br>11.3.3 突发事件处理 288<br>11.4 本章小结 288<br>第12章 Kong网关安全与集群高可用 289<br>12.1 Kong网关安全配置 289<br>12.1.1 网络层访问限制 289<br>12.1.2 Kong API 回路 290<br>12.1.3 自定义Nginx配置 291<br>12.2 Kong集群 292<br>12.2.1 Kong集群简介 292<br>12.2.2 Kong集群缓存 293<br>12.3 Kong网关高可用 298<br>12.3.1 架构设计 298<br>12.3.2 引入HAProxy层 300<br>12.3.3 高可用方案测试 301<br>12.4 本章小结 308<br>应用篇<br>第13章 Kong网关结合微服务架构 310<br>13.1 微服务简介 310<br>13.1.1 微服务的优点 311<br>13.1.2 单体应用和微服务 311<br>13.1.3 微服务12要素 313<br>13.2 单体应用向微服务迁移 313<br>13.2.1 采用微服务的注意事项 314<br>13.2.2 迁移细节 314<br>13.3 使用CI&#x2F;CD流程促进微服务开发 316<br>13.3.1 CI&#x2F;CD流程基础组件 316<br>13.3.2 构建CI&#x2F;CD流程 318<br>13.4 基于Kong打造DevOps平台 320<br>13.4.1 场景描述 320<br>13.4.2 设计思路 321<br>13.4.3 DevOps平台使用指南 325<br>13.4.4 DevOps平台源码解析 329<br>13.4.5 DevOps平台扩展 335<br>13.5 本章小结 336<br>第14章 Kong网关结合Kubernetes架构方案 337<br>14.1 Kubernetes详解 337<br>14.1.1 Kubernetes简介 337<br>14.1.2 Kubernetes发展史 338<br>14.1.3 Kubernetes基本概念和术语 340<br>14.1.4 Kubernetes的HelloWorld示例 342<br>14.2 Kubernetes与Kong网关结合 350<br>14.2.1 概念描述 350<br>14.2.2 使用Kubernetes安装Kong 358<br>14.3 Kubernetes实战 359<br>14.3.1 安装Kong网关 359<br>14.3.2 使用Kong网关 360<br>14.3.3 配置Kong网关插件 361<br>14.4 本章小结 363<br>第15章 Service Mesh实践之Kuma 364<br>15.1 Service Mesh简介 364<br>15.2 Kuma简介 366<br>15.2.1 为什么使用Kuma 366<br>15.2.2 Kuma与其他Service Mesh方案的比较 366<br>15.2.3 Kuma系统组件 367<br>15.2.4 Kuma部署示例 368<br>15.3 Kuma策略概述 369<br>15.3.1 策略配置项描述 369<br>15.3.2 使用策略 370<br>15.3.3 策略匹配规则 371<br>15.4 Kuma内置策略详解 372<br>15.4.1 安全类策略 372<br>15.4.2 流量控制类策略 376<br>15.4.3 观测类策略 382<br>15.5 Kuma实战 388<br>15.5.1 适配Kuma架构 388<br>15.5.2 启动mTSL和TrafficPermission 390<br>15.6 本章小结 391<br>第16章 Serverless架构 392<br>16.1 Serverless简介 392<br>16.1.1 系统架构演化 392<br>16.1.2 部署方式演化 393<br>16.1.3 Serverless内核 395<br>16.2 Serverless实践 396<br>16.2.1 搭建开发环境 396<br>16.2.2 Web应用服务 402<br>16.3 本章小结 407<br>附录A Docker安装指南 408<br>附录B KONGA安装指南 412<br>附录C 数据库明细 417<br>附录D Admin API 422</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接: https://pan.baidu.com/s/1plzo0YhLcTwZVI1hddwQiw?<span class="built_in">pwd</span>=5trk 提取码: 5trk 复制这段内容后打开百度网盘手机App，操作更方便哦</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 书籍推荐 </category>
          
          <category> 百度网盘PDF下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF下载 </tag>
            
            <tag> Kong </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《Python编程：从入门到实践》</title>
      <link href="/2023/05/19/Python%E7%BC%96%E7%A8%8B%EF%BC%9A%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/"/>
      <url>/2023/05/19/Python%E7%BC%96%E7%A8%8B%EF%BC%9A%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/031C7413E5CDC918603FDAB290074F33.png" alt="《Python编程：从入门到实践》"></p><h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><hr><p>本书是针对所有层次Python读者而作的Python入门书。全书分两部分：第一部分介绍用Python编程所必须了解的基本概念，包括Matplotlib等强大的Python库和工具，以及列表、字典、if语句、类、文件与异常、代码测试等内容；第二部分将理论付诸实践，讲解如何开发三个项目，包括简单的2D游戏、利用数据生成交互式的信息图以及创建和定制简单的Web应用，并帮助读者解决常见编程问题和困惑。第2版进行了全面修订，简化了Python安装流程，新增了f字符串、get()方法等内容，并且在项目中使用了Plotly库以及新版本的Django和Bootstrap，等等。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><hr><p>埃里克·马瑟斯（Eric Matthes）</p><p>高中科学和数学老师，现居住在阿拉斯加，在当地讲授Python入门课程。他从5岁开始就一直在编写程序。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><hr><p>第一部分 基础知识<br>第1章 起步　　2<br>1.1 搭建编程环境　　2<br>1.1.1 Python版本　　2<br>1.1.2 运行Python代码片段　　2<br>1.1.3 Sublime Text简介　　3<br>1.2 在不同操作系统中搭建Python编程环境　　3<br>1.2.1 在Windows系统中搭建Python编程环境　　4<br>1.2.2 在macOS系统中搭建Python编程环境　　5<br>1.2.3 在Linux 系统中搭建Python编程环境　　7<br>1.3 运行Hello World 程序　　8<br>1.3.1 配置Sublime Text以使用正确的Python版本　　8<br>1.3.2 运行程序hello_world.py　　8<br>1.4 解决安装问题　　9<br>1.5 从终端运行Python程序　　9<br>1.5.1 在Windows系统中从终端运行Python 程序　　10<br>1.5.2 在Linux和macOS系统中从终端运行Python程序　　10<br>1.6 小结　　11<br>第2章 变量和简单数据类型　　12<br>2.1 运行hello_world.py时发生的情况　　12<br>2.2 变量　　13<br>2.2.1 变量的命名和使用　　13<br>2.2.2 使用变量时避免命名错误　　14<br>2.2.3 变量是标签　　15<br>2.3 字符串　　16<br>2.3.1 使用方法修改字符串的大小写　　17<br>2.3.3 使用制表符或换行符来添加空白　　18<br>2.3.4 删除空白　　19<br>2.3.5 使用字符串时避免语法错误　　20<br>2.4 数　　21<br>2.4.1 整数　　22<br>2.4.2 浮点数　　22<br>2.4.3 整数和浮点数　　23<br>2.4.4 数中的下划线　　23<br>2.4.5 同时给多个变量赋值　　24<br>2.4.6 常量　　24<br>2.5 注释　　25<br>2.5.1 如何编写注释　　25<br>2.5.2 该编写什么样的注释　　25<br>2.6 Python之禅　　26<br>2.7 小结　　27<br>第3章 列表简介　　28<br>3.1 列表是什么　　28<br>3.1.1 访问列表元素　　29<br>3.1.2 索引从0而不是1开始　　29<br>3.1.3 使用列表中的各个值　　30<br>3.2 修改、添加和删除元素　　31<br>3.2.1 修改列表元素　　31<br>3.2.2 在列表中添加元素　　31<br>3.2.3 从列表中删除元素　　32<br>3.3 组织列表　　36<br>3.3.1 使用方法sort()对列表永久排序　　37<br>3.3.2 使用函数sorted()对列表临时排序　　37<br>3.3.3 倒着打印列表　　38<br>3.3.4 确定列表的长度　　38<br>3.4 使用列表时避免索引错误　　39<br>3.5 小结　　41<br>第4章 操作列表　　42<br>4.1 遍历整个列表　　42<br>4.1.1 深入研究循环　　43<br>4.1.2 在for 循环中执行更多操作　　44<br>4.1.3 在for 循环结束后执行一些操作　　45<br>4.2 避免缩进错误　　45<br>4.2.1 忘记缩进　　46<br>4.2.2 忘记缩进额外的代码行　　46<br>4.2.3 不必要的缩进　　47<br>4.2.4 循环后不必要的缩进　　47<br>4.2.5 遗漏了冒号　　48<br>4.3 创建数值列表　　49<br>4.3.1 使用函数range()　　49<br>4.3.2 使用range()创建数字列表　　50<br>4.3.3 对数字列表执行简单的统计计算　　51<br>4.3.4 列表解析　　52<br>4.4 使用列表的一部分　　53<br>4.4.1 切片　　53<br>4.4.2 遍历切片　　54<br>4.4.3 复制列表　　55<br>4.5 元组　　57<br>4.5.1 定义元组　　57<br>4.5.2 遍历元组中的所有值　　58<br>4.5.3 修改元组变量　　59<br>4.6 设置代码格式　　60<br>4.6.1 格式设置指南　　60<br>4.6.2 缩进　　60<br>4.6.3 行长　　60<br>4.6.4 空行　　61<br>4.6.5 其他格式设置指南　　61<br>4.7 小结　　62<br>第5章 if语句　　63<br>5.1 一个简单示例　　63<br>5.2 条件测试　　64<br>5.2.1 检查是否相等　　64<br>5.2.2 检查是否相等时忽略大小写　　64<br>5.2.3 检查是否不相等　　65<br>5.2.4 数值比较　　66<br>5.2.5 检查多个条件　　66<br>5.2.6 检查特定值是否包含在列表中　　68<br>5.2.8 布尔表达式　　68<br>5.3 if语句　　69<br>5.3.1 简单的if语句　　69<br>5.3.2 if-else语句　　70<br>5.3.3 if-elif-else结构　　71<br>5.3.4 使用多个elif代码块　　72<br>5.3.5 省略else代码块　　73<br>5.3.6 测试多个条件　　73<br>5.4 使用if语句处理列表　　76<br>5.4.1 检查特殊元素　　76<br>5.4.2 确定列表不是空的　　77<br>5.4.3 使用多个列表　　77<br>5.5 设置if语句的格式　　79<br>5.6 小结　　80<br>第6章 字典　　81<br>6.1 一个简单的字典　　81<br>6.2 使用字典　　82<br>6.2.1 访问字典中的值　　82<br>6.2.2 添加键值对　　83<br>6.2.3 先创建一个空字典　　83<br>6.2.4 修改字典中的值　　84<br>6.2.5 删除键值对　　85<br>6.2.6 由类似对象组成的字典　　86<br>6.2.7 使用get()来访问值　　87<br>6.3 遍历字典　　88<br>6.3.1 遍历所有键值对　　88<br>6.3.2 遍历字典中的所有键　　90<br>6.3.3 按特定顺序遍历字典中的所有键　　92<br>6.3.4 遍历字典中的所有值　　92<br>6.4 嵌套　　94<br>6.4.1 字典列表　　94<br>6.4.2 在字典中存储列表　　97<br>6.4.3 在字典中存储字典　　98<br>6.5 小结　　100<br>第7章 用户输入和while循环　　101<br>7.1 函数input()的工作原理　　101<br>7.1.1 编写清晰的程序　　102<br>7.1.2 使用int()来获取数值输入　　102<br>7.1.3 求模运算符　　104<br>7.2 while循环简介　　105<br>7.2.1 使用while循环　　105<br>7.2.2 让用户选择何时退出　　105<br>7.2.3 使用标志　　107<br>7.2.4 使用break退出循环　　108<br>7.2.5 在循环中使用continue　　109<br>7.2.6 避免无限循环　　109<br>7.3 使用while循环处理列表和字典　　111<br>7.3.1 在列表之间移动元素　　111<br>7.3.2 删除为特定值的所有列表元素　　112<br>7.3.3 使用用户输入来填充字典　　112<br>7.4 小结　　114<br>第8章 函数　　115<br>8.1 定义函数　　115<br>8.1.1 向函数传递信息　　116<br>8.1.2 实参和形参　　116<br>8.2 传递实参　　117<br>8.2.1 位置实参　　117<br>8.2.2 关键字实参　　119<br>8.2.3 默认值　　119<br>8.2.4 等效的函数调用　　120<br>8.2.5 避免实参错误　　121<br>8.3 返回值　　122<br>8.3.1 返回简单值　　122<br>8.3.2 让实参变成可选的　　123<br>8.3.3 返回字典　　124<br>8.3.4 结合使用函数和while循环　　125<br>8.4 传递列表　　127<br>8.4.1 在函数中修改列表　　128<br>8.4.2 禁止函数修改列表　　130<br>8.5 传递任意数量的实参　　131<br>8.5.1 结合使用位置实参和任意数量实参　　132<br>8.5.2 使用任意数量的关键字实参　　134<br>8.6.1 导入整个模块　　134<br>8.6.2 导入特定的函数　　135<br>8.6.3 使用as给函数指定别名　　136<br>8.6.4 使用as给模块指定别名　　136<br>8.6.5 导入模块中的所有函数　　137<br>8.7 函数编写指南　　137<br>8.8 小结　　138<br>第9章 类　　140<br>9.1 创建和使用类　　140<br>9.1.1 创建Dog类　　141<br>9.1.2 根据类创建实例　　142<br>9.2 使用类和实例　　144<br>9.2.1 Car类　　145<br>9.2.2 给属性指定默认值　　145<br>9.2.3 修改属性的值　　146<br>9.3 继承　　149<br>9.3.1 子类的方法__init__()　　149<br>9.3.2 给子类定义属性和方法　　151<br>9.3.3 重写父类的方法　　152<br>9.3.4 将实例用作属性　　152<br>9.3.5 模拟实物　　154<br>9.4 导入类　　155<br>9.4.1 导入单个类　　155<br>9.4.2 在一个模块中存储多个类　　157<br>9.4.3 从一个模块中导入多个类　　158<br>9.4.4 导入整个模块　　158<br>9.4.5 导入模块中的所有类　　159<br>9.4.6 在一个模块中导入另一个模块　　159<br>9.4.7 使用别名　　160<br>9.4.8 自定义工作流程　　160<br>9.5 Python标准库　　161<br>9.6 类编码风格　　162<br>9.7 小结　　163<br>第10章 文件和异常　　164<br>10.1 从文件中读取数据　　164<br>10.1.1 读取整个文件　　164<br>10.1.2 文件路径　　166<br>10.1.3 逐行读取　　167<br>10.1.4 创建一个包含文件各行内容的列表　　168<br>10.1.5 使用文件的内容　　168<br>10.1.6 包含一百万位的大型文件　　170<br>10.2 写入文件　　171<br>10.2.1 写入空文件　　171<br>10.2.2 写入多行　　172<br>10.2.3 附加到文件　　173<br>10.3 异常　　174<br>10.3.1 处理ZeroDivisionError异常　　174<br>10.3.2 使用try-except 代码块　　174<br>10.3.3 使用异常避免崩溃　　175<br>10.3.4 else代码块　　176<br>10.3.5 处理FileNotFoundError异常　　177<br>10.3.6 分析文本　　178<br>10.3.7 使用多个文件　　179<br>10.3.8 静默失败　　180<br>10.3.9 决定报告哪些错误　　181<br>10.4 存储数据　　182<br>10.4.1 使用json.dump()和json.load()　　182<br>10.4.2 保存和读取用户生成的数据　　183<br>10.4.3 重构　　185<br>10.5 小结　　187<br>第11章 测试代码　　188<br>11.1 测试函数　　188<br>11.1.1 单元测试和测试用例　　189<br>11.1.2 可通过的测试　　189<br>11.1.3 未通过的测试　　191<br>11.1.4 测试未通过时怎么办　　192<br>11.1.5 添加新测试　　193<br>11.2 测试类　　194<br>11.2.1 各种断言方法　　194<br>11.2.2 一个要测试的类　　195<br>11.2.3 测试AnonymousSurvey类　　197<br>11.2.4 方法setUp()　　198<br>11.3 小结　　200<br>第二部分 项 目<br>项目1 外星人入侵　　202<br>第12章 武装飞船　　203<br>12.1 规划项目　　203<br>12.2 安装Pygame　　204<br>12.3 开始游戏项目　　204<br>12.3.1 创建Pygame窗口及响应用户输入　　204<br>12.3.2 设置背景色　　206<br>12.3.3 创建设置类　　207<br>12.4 添加飞船图像　　208<br>12.4.1 创建Ship类　　209<br>12.4.2 在屏幕上绘制飞船　　210<br>12.5 重构：方法_check_events()和__update_screen()　　211<br>12.5.1 方法_check_events()　　211<br>12.5.2 方法_update_screen()　　212<br>12.6 驾驶飞船　　213<br>12.6.1 响应按键　　213<br>12.6.2 允许持续移动　　214<br>12.6.3 左右移动　　215<br>12.6.4 调整飞船的速度　　216<br>12.6.5 限制飞船的活动范围　　218<br>12.6.6 重构_check_events()　　218<br>12.6.7 按Q键退出　　219<br>12.6.8 在全屏模式下运行游戏　　219<br>12.7 简单回顾　　220<br>12.7.1 alien_invasion.py　　220<br>12.7.2 settings.py　　220<br>12.7.3 ship.py　　220<br>12.8 射击　　221<br>12.8.1 添加子弹设置　　221<br>12.8.2 创建Bullet类　　221<br>12.8.3 将子弹存储到编组中　　223<br>12.8.4 开火　　223<br>12.8.5 删除消失的子弹　　225<br>12.8.6 限制子弹数量　　225<br>12.8.7 创建方法_update_bullets()　　227<br>第13章 外星人来了　　228<br>13.1 项目回顾　　228<br>13.2 创建第一个外星人　　229<br>13.2.1 创建Alien类　　229<br>13.2.2 创建Alien实例　　230<br>13.3 创建一群外星人　　232<br>13.3.1 确定一行可容纳多少个外星人　　232<br>13.3.2 创建一行外星人　　232<br>13.3.3 重构_create_fleet()　　234<br>13.3.4 添加行　　234<br>13.4 让外星人群移动　　237<br>13.4.1 向右移动外星人群　　237<br>13.4.2 创建表示外星人移动方向的设置　　238<br>13.4.3 检查外星人是否撞到了屏幕边缘　　238<br>13.4.4 向下移动外星人群并改变移动方向　　239<br>13.5 射杀外星人　　240<br>13.5.1 检测子弹与外星人的碰撞　　241<br>13.5.3 生成新的外星人群　　242<br>13.5.4 提高子弹的速度　　243<br>13.5.5 重构_update_bullets()　　243<br>13.6 结束游戏　　244<br>13.6.1 检测外星人和飞船碰撞　　244<br>13.6.2 响应外星人和飞船碰撞　　245<br>13.6.3 有外星人到达屏幕底端　　247<br>13.6.4 游戏结束　　248<br>13.7 确定应运行游戏的哪些部分　　248<br>13.8 小结　　249<br>第14章 记分　　250<br>14.1 添加Play按钮　　250<br>14.1.1 创建Button类　　250<br>14.1.2 在屏幕上绘制按钮　　252<br>14.1.3 开始游戏　　253<br>14.1.4 重置游戏　　254<br>14.1.5 将Play按钮切换到非活动状态　　254<br>14.1.6 隐藏鼠标光标　　255<br>14.2 提高等级　　256<br>14.2.1 修改速度设置　　256<br>14.2.2 重置速度　　258<br>14.3 记分　　258<br>14.3.1 显示得分　　259<br>14.3.2 创建记分牌　　260<br>14.3.3 在外星人被消灭时更新得分　　261<br>14.3.4 重置得分　　262<br>14.3.5 将消灭的每个外星人都计入得分　　262<br>14.3.6 提高分数　　263<br>14.3.7 舍入得分　　264<br>14.3.8 最高得分　　265<br>14.3.9 显示等级　　267<br>14.3.10 显示余下的飞船数　　269<br>14.4 小结　　272<br>项目2 数据可视化　　273<br>第15章 生成数据　　274<br>15.1 安装Matplotlib　　274<br>15.2 绘制简单的折线图　　275<br>15.2.1 修改标签文字和线条粗细　　277<br>15.2.3 使用内置样式　　278<br>15.2.4 使用scatter()绘制散点图并设置样式　　279<br>15.2.5 使用scatter()绘制一系列点　　280<br>15.2.6 自动计算数据　　281<br>15.2.7 自定义颜色　　282<br>15.2.8 使用颜色映射　　283<br>15.2.9 自动保存图表　　284<br>15.3 随机漫步　　284<br>15.3.1 创建RandomWalk类　　284<br>15.3.2 选择方向　　285<br>15.3.3 绘制随机漫步图　　286<br>15.3.4 模拟多次随机漫步　　287<br>15.3.5 设置随机漫步图的样式　　288<br>15.4 使用Plotly模拟掷骰子　　292<br>15.4.1 安装Plotly　　292<br>15.4.2 创建Die类　　293<br>15.4.3 掷骰子　　293<br>15.4.4 分析结果　　294<br>15.4.5 绘制直方图　　294<br>15.4.6 同时掷两个骰子　　296<br>15.4.7 同时掷两个面数不同的骰子　　298<br>15.5 小结　　300<br>第16章 下载数据　　301<br>16.1 CSV文件格式　　301<br>16.1.1 分析CSV文件头　　302<br>16.1.2 打印文件头及其位置　　302<br>16.1.3 提取并读取数据　　303<br>16.1.4 绘制温度图表　　304<br>16.1.5 模块datetime　　305<br>16.1.6 在图表中添加日期　　306<br>16.1.7 涵盖更长的时间　　307<br>16.1.8 再绘制一个数据系列　　308<br>16.1.9 给图表区域着色　　309<br>16.1.10 错误检查　　310<br>16.1.11 自己动手下载数据　　313<br>16.2 制作全球地震散点图：JSON格式　　315<br>16.2.2 查看JSON数据　　315<br>16.2.3 创建地震列表　　317<br>16.2.4 提取震级　　317<br>16.2.5 提取位置数据　　318<br>16.2.6 绘制震级散点图　　319<br>16.2.7 另一种指定图表数据的方式　　320<br>16.2.8 定制标记的尺寸　　321<br>16.2.9 定制标记的颜色　　322<br>16.2.10 其他渐变　　323<br>16.2.11 添加鼠标指向时显示的文本　　324<br>16.3 小结　　325<br>第17章 使用API　　326<br>17.1 使用Web API　　326<br>17.1.1 Git 和GitHub　　326<br>17.1.2 使用API调用请求数据　　327<br>17.1.3 安装Requests　　327<br>17.1.4 处理API响应　　328<br>17.1.5 处理响应字典　　329<br>17.1.6 概述最受欢迎的仓库　　331<br>17.1.7 监视API的速率限制　　332<br>17.2 使用Plotly可视化仓库　　332<br>17.2.1 改进Plotly图表　　334<br>17.2.2 添加自定义工具提示　　336<br>17.2.3 在图表中添加可单击的链接　　337<br>17.2.4 深入了解Plotly和GitHub API　　338<br>17.3 Hacker News API　　338<br>17.4 小结　　341<br>项目3 Web 应用程序　　342<br>第18章 从Django 入手　　343<br>18.1 建立项目　　343<br>18.1.1 制定规范　　343<br>18.1.2 建立虚拟环境　　344<br>18.1.3 激活虚拟环境　　344<br>18.1.4 安装Django　　345<br>18.1.5 在Django中创建项目　　345<br>18.1.6 创建数据库　　346<br>18.1.7 查看项目　　346<br>18.2 创建应用程序　　348<br>18.2.1 定义模型　　348<br>18.2.2 激活模型　　349<br>18.2.3 Django管理网站　　351<br>18.2.4 定义模型Entry　　353<br>18.2.5 迁移模型Entry　　354<br>18.2.6 向管理网站注册Entry　　354<br>18.2.7 Django shell　　355<br>18.3 创建页面：学习笔记主页　　357<br>18.3.1 映射URL　　358<br>18.3.2 编写视图　　359<br>18.3.3 编写模板　　360<br>18.4 创建其他页面　　361<br>18.4.1 模板继承　　361<br>18.4.2 显示所有主题的页面　　363<br>18.4.3 显示特定主题的页面　　366<br>18.5 小结　　369<br>第19章 用户账户　　370<br>19.1 让用户输入数据　　370<br>19.1.1 添加新主题　　370<br>19.1.2 添加新条目　　374<br>19.1.3 编辑条目　　378<br>19.2 创建用户账户　　381<br>19.2.1 应用程序users　　381<br>19.2.2 将users添加到settings.py 中　　381<br>19.2.3 包含users的URL　　382<br>19.2.4 登录页面　　382<br>19.2.5 注销　　384<br>19.2.6 注册页面　　386<br>19.3 让用户拥有自己的数据　　388<br>19.3.1 使用@login_required限制访问　　388<br>19.3.2 将数据关联到用户　　390<br>19.3.3 只允许用户访问自己的主题　　393<br>19.3.4 保护用户的主题　　393<br>19.3.5 保护页面edit_entry　　394<br>19.3.6 将新主题关联到当前用户　　396<br>第20章 设置应用程序的样式并部署　　397<br>20.1.1 应用程序django-bootstrap4　　398<br>20.1.3 修改base.html　　399<br>20.1.4 使用jumbotron设置主页的样式　　403<br>20.1.5 设置登录页面的样式　　404<br>20.1.6 设置显示所有主题的页面的样式　　405<br>20.1.7 设置显示单个主题的页面中的条目样式　　406<br>20.2 部署“学习笔记”　　407<br>20.2.1 建立Heroku账户　　408<br>20.2.2 安装Heroku CLI　　408<br>20.2.3 安装必要的包　　408<br>20.2.4 创建文件requirements.txt　　409<br>20.2.6 为部署到Heroku而修改settings.py　　410<br>20.2.7 创建启动进程的Procfile　　410<br>20.2.8 使用Git 跟踪项目文件　　410<br>20.2.9 推送到Heroku　　412<br>20.2.10 在Heroku上建立数据库　　414<br>20.2.12 确保项目的安全　　416<br>20.2.13 提交并推送修改　　416<br>20.2.14 在Heroku 上设置环境变量　　417<br>20.2.15 创建自定义错误页面　　418<br>20.2.16 继续开发　　420<br>20.2.17 设置SECRET_KEY　　421<br>20.2.18 将项目从Heroku删除　　421<br>20.3 小结　　422<br>附录A 安装与故障排除　　423<br>附录B 文本编辑器与IDE　　428<br>附录C 寻求帮助　　432<br>附录D 使用Git 进行版本控制　　436<br>后记　　445</p><h3 id="Python编程：从入门到实践-PDF-下载地址"><a href="#Python编程：从入门到实践-PDF-下载地址" class="headerlink" title="Python编程：从入门到实践 PDF 下载地址:"></a>Python编程：从入门到实践 PDF 下载地址:</h3><hr><p>链接: <a href="https://pan.baidu.com/s/176a2OqF1JDSqNn0_JhHfsw?pwd=qhvz">https://pan.baidu.com/s/176a2OqF1JDSqNn0_JhHfsw?pwd=qhvz</a><br>提取码: qhvz<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 书籍推荐 </category>
          
          <category> 百度网盘PDF下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF下载 </tag>
            
            <tag> 编程 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本站所有文档密码</title>
      <link href="//mima/"/>
      <url>//mima/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="34ec353989283c3a4ba6a26cfd5a71b4409b87cdace0315c54fc65ca3a576683">1b693c4938223286468132b2f7068bf6dfee07f365da88e0f20fb98ce9ee8b53d2b2b3d27fe00611ae01aab9502c74251a028d46727701746eb6ab24f4a6bde0bb413a4181288cc184d1a5b56ea616815ed410e54d06738826d84350289d51b1ad1d1ebd149673c98971c830a8ae9ac7603436acc5bf3f434dc9906fa03a83506227b33188752de09daa22ca60b4055b83ae829311c73f56744cd35f0ea194ae6bc909e56cee47d858e3672029697b67eb8bcba1b115780e43d52157418dbe8becb4a1a3c96157e6c43a86158d32e0429345c61921f2f87f18a04ae06f43af338e4629ddfec349864027c54ed0c732a7a761dcdd67540be4ca8e435f3da95298060207ea4c34cb9a9b6333653b55fe5ab4e040c41bbedf7215fdbf9d04f4af7e489bef42663b11f2c4e74945c85533116bc54c73d8e4183fd79c821068cb434a6742b2e298160dcbafe60309abfdcf6b8a3ba5d0863e45aa20328f6fd5e0454f7f82a332106d6ea384d12d68aef6b7b4479dc473f02a44ae9d08f5ac4d0f2cb69a10f9f48e233d460154bf4eca92f47cdf5f05036eb15e9421280f705522b2ccc287a402d96096eac117a165c0566e2132448e6d146d5c29906343b6eb2a030c432c1c6ec01c2b6a242ee461f73aa4083b6a06efa73a4a7dd8b48925b7f8852ff8d842e3c4917520b0e43c5a0e4ffa08a7ed3da6d2226861c5915a0a21157c51f7f4a6352d26d883a5fe7608f300bcca813ca93a0d52a3666391958de3b441bbf6a43c2ca294a9a3cae052d7f99ede09b458542a6626feef7b977bf3fb1eee383b84072a9f5a1e879e19a108369e779dbf664682edf274f606ec0de46414e761</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-flip">      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="您好, 此文章需要要密码才可以查看.">您好, 此文章需要要密码才可以查看.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> PDF密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《pytest测试实战》</title>
      <link href="/2023/05/19/pytest%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB/"/>
      <url>/2023/05/19/pytest%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/6E7FFAC4BE6AA9069DB81181D116D110.png" alt="《pytest测试实战》"></p><h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><hr><p>pytest是动态编程语言Python专用的测试框架，它具有易于上手、功能强大、第三方插件丰富、效率高、可扩展性好、兼容性强等特点。《pytest测试实战》深入浅出地讲解了pytest的使用方法，尤其是具有特色的fixture的用法。作者通过丰富的测试实例，手把手教读者编写简洁、易于维护的测试代码和插件，让你轻松掌握这个业界最受欢迎的Python测试工具。</p><p>第1章介绍pytest的安装，同时会介绍Tasks项目的数据结构部分（名为Task的namedtuple），并用它作为测试示例。我们会学习如何指定测试文件运行，以及pytest常用的命令行命令，包括重新运行失败测试、遇到失败即停止所有测试、控制堆栈跟踪、控制日志输出，等等。</p><p>第2章将使用pip在本地安装Tasks项目，学习在Python项目中如何组织测试目录，这样才能针对实际项目编写测试用例。这一章的所有示例都依赖外部程序，包括数据库写入。</p><p>第2章的重点是测试函数，你将学习在pytest中高效使用断言语句。这一章还会讲解marker标记功能的用法，marker标记可以将测试进行归类或分组，方便一起运行，也可以将某些测试标记为skip（跳过不执行），marker标记还可以告诉pytest我们知道某些测试是一定会失败的。如果希望运行指定的测试子集，除了使用marker，还可以将测试代码组织成测试目录、测试模块、测试类，然后运行。</p><p>并非所有的测试代码都要放到测试函数中。第3章介绍如何将测试数据、启动逻辑、销毁逻辑放入fixture（pytest定义的一种测试脚手架）。设置系统（或子系统、系统单元）是软件测试的重要环节，第3章将介绍用一个简单的fixture完成这方面的工作（包括对数据库进行初始化，写入数据以备测试之用）。Fixture模块的功能非常强大，你可以利用它简化测试代码，从而提高代码的可读性和可维护性。Fixture像测试函数一样，也有参数。利用参数，你只需要编写一份代码，就可以针对TinyDB和MongoDB（或其他Tasks项目支持的数据库）开展测试。</p><p>第4章介绍pytest内置的fixture以满足测试中常见的一些需求，包括生成和销毁临时目录、截取输出流（通过日志判定结果）、使用monkey patch、检查是否发出警告，等等。</p><p>第5章讲解如何在pytest中添加命令行选项，如何改进打印输出，如何打包分发自己编写的插件，如何共享定制化的pytest（包括fixture）。这一章开发的插件可以改善Tasks项目测试失败时的输出呈现方式。你还将学习测试自己的测试插件（元测试）。读完这一章，想必你已经等不及编写自己的插件了。附录C收集了一些热门的社区插件，可供参考。</p><p>第6章讲解通过pytest.ini文件修改默认配置，自定义pytest的运行方式。pytest.ini文件可以存放某些命令选项，从而减少你重复输入命令的次数；利用它还可以指定pytest忽略某些测试目录，或者指定pytest的最低版本，等等。使用tox.ini和setup.cfg文件也可以实现同样的功能。</p><p>第7章（最后一章）介绍pytest与其他工具的结合使用。我们将借助tox让Tasks项目在多个Python版本上运行；学习如何测试Tasks项目的CLI部分，而不必mock系统的其余部分；借助coverage.py检查Tasks项目代码块的测试覆盖情况；通过Jenkins发起测试并实时显示结果。最后，还会学习如何让pytest运行基于unittest的测试用例，以及把pytest的fixture共享给unittest的测试用例使用。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><hr><p>Brian Okken是一位有二十多年工作经验的软件测试工程师，他业余时间录制了Test &amp; Code和Python Bytes两个播客。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><hr><p>前言<br>第1章 pytest入门 1<br>1.1 资源获取 4<br>1.2 运行Pytest 5<br>1.3 运行单个测试用例 10<br>1.4 使用命令行选项 10<br>–collect-only选项 11<br>-k选项 11<br>-m选项 12<br>-x选项 13<br>–maxfail&#x3D;num 15<br>-s与–capture&#x3D;method 16<br>–lf（–last-failed）选项 16<br>–ff（–failed-first）选项 17<br>-v（–verbose）选项 17<br>-q（–quiet）选项 18<br>-l（–showlocals）选项 19<br>–tb&#x3D;style选项 20<br>–duration&#x3D;N选项 21<br>–version选项 22<br>-h（–help）选项 23<br>1.5 练习 24<br>1.6 预告 25<br>第2章 编写测试函数 27<br>2.1 测试示例程序 27<br>本地安装Tasks项目程序包 30<br>2.2 使用assert声明 32<br>2.3 预期异常 35<br>2.4 测试函数的标记 36<br>完善冒烟测试 38<br>2.5 跳过测试 40<br>2.6 标记预期会失败的测试 43<br>2.7 运行测试子集 45<br>单个目录 45<br>单个测试文件&#x2F;模块 46<br>单个测试函数 47<br>单个测试类 47<br>单个测试类中的测试方法 48<br>用测试名划分测试集合 48<br>2.8 参数化测试 49<br>2.9 练习 56<br>2.10 预告 57<br>第3章 pytest Fixture 59<br>3.1 通过conftest.py共享fixture 60<br>3.2 使用fixture执行配置及销毁逻辑 61<br>3.3 使用–setup-show回溯fixture的执行过程 63<br>3.4 使用fixture传递测试数据 64<br>3.5 使用多个fixture 66<br>3.6 指定fixture作用范围 68<br>修改Tasks项目的fixture作用范围 70<br>3.7 使用usefixtures指定fixture 73<br>3.8 为常用fixture添加autouse选项 74<br>3.9 为fixture重命名 75<br>3.10 Fixture的参数化 77<br>3.11 参数化Tasks项目中的fixture 80<br>3.12 练习 83<br>3.13 预告 83<br>第4章 内置Fixture 85<br>4.1 使用tmpdir和tmpdir_factory 86<br>在其他作用范围内使用临时目录 88<br>4.2 使用pytestconfig 90<br>4.3 使用cache 92<br>4.4 使用capsys 100<br>4.5 使用monkeypatch 102<br>4.6 使用doctest_namespace 106<br>4.7 使用recwarn 109<br>4.8 练习 110<br>4.9 预告 111<br>第5章 插件 113<br>5.1 寻找插件 114<br>5.2 安装插件 114<br>从PyPI安装 114<br>从PyPI安装指定版本 115<br>从.tar.gz或.whl文件安装 115<br>从本地目录安装 115<br>从Git存储仓库安装 116<br>5.3 编写自己的插件 116<br>5.4 创建可安装插件 121<br>5.5 测试插件 125<br>5.6 创建发布包 129<br>通过共享目录分发插件 130<br>通过PyPI发布插件 130<br>5.7 练习 131<br>5.8 预告 131<br>第6章 配置 133<br>6.1 理解pytest的配置文件 133<br>用pytest –help查看ini文件选项 135<br>插件可以添加ini文件选项 135<br>6.2 更改默认命令行选项 136<br>6.3 注册标记来防范拼写错误 136<br>6.4 指定pytest的最低版本号 138<br>6.5 指定pytest忽略某些目录 138<br>6.6 指定测试目录 139<br>6.7 更改测试搜索的规则 141<br>6.8 禁用XPASS 142<br>6.9 避免文件名冲突 143<br>6.10 练习 145<br>6.11 预告 145<br>第7章 pytest与其他工具的搭配使用 147<br>7.1 pdb：调试失败的测试用例 147<br>7.2 coverage.py：判断测试覆盖了多少代码 151<br>7.3 mock：替换部分系统 155<br>7.4 tox：测试多种配置 162<br>7.5 Jenkins CI：让测试自动化 166<br>7.6 unittest：用pytest运行历史遗留测试用例 173<br>7.7 练习 179<br>7.8 预告 180<br>附录A 虚拟环境 181<br>附录B Pip 183<br>附录C 常用插件 187<br>C.1 改变测试流程的插件 187<br>pytest-repeat：重复运行测试 187<br>pytest-xdist：并行运行测试 189<br>pytest-timeout：为测试设置时间限制 190<br>C.2 改善输出效果的插件 191<br>pytest-instafail：查看错误的详细信息 191<br>pytest-sugar：显示色彩和进度条 192<br>pytest-emoji：为测试增添一些乐趣 193<br>pytest-html：为测试生成HTML报告 195<br>C.3 静态分析用的插件 197<br>pytest-pycodestyle和pytest-pep8：Python代码风格检查 197<br>pytest-flake8：更多的风格检查 197<br>C.4 Web开发用的插件 198<br>pytest-selenium：借助浏览器完成自动化测试 198<br>pytest-django：测试Django应用 198<br>pytest-flask：测试Flask应用 199<br>附录D 打包和发布Python项目 201<br>D.1 创建可安装的模块 201<br>D.2 创建可安装的包 203<br>D.3 创建源码发布包和Wheel文件 205<br>D.4 创建可以从PyPI安装的包 209<br>附录E xUnit Fixture 211<br>E.1 xUnit Fixture的语法 211<br>E.2 混合使用pytest Fixture和xUnit Fixture 214<br>E.3 xUnit Fixture的限制 215<br>索引 216</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><hr><p>链接: <a href="https://pan.baidu.com/s/1zoMeubUpTygGIDCENxRmYQ?pwd=tgjh">https://pan.baidu.com/s/1zoMeubUpTygGIDCENxRmYQ?pwd=tgjh</a> </p><p>提取码: tgjh </p><p>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 书籍推荐 </category>
          
          <category> 百度网盘PDF下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PDF下载 </tag>
            
            <tag> 编程 </tag>
            
            <tag> PyTest </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
